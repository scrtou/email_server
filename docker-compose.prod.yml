version: '3.8'

# 生产环境 Docker Compose 配置
# 使用方法: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  # 后端服务 - 生产环境配置
  backend:
    # 生产环境建议使用预构建的镜像而不是现场构建
    # image: your-registry/email-server-backend:latest
    environment:
      # 生产环境环境变量 - 请通过 .env 文件或系统环境变量设置
      SERVER_PORT: "5555"
      SQLITE_FILE: "/data/database.db"
      # 安全配置
      GIN_MODE: "release"  # Gin框架生产模式
      # 这些敏感信息应该通过 .env 文件或 Docker secrets 设置
      JWT_SECRET: "${JWT_SECRET}"
      LINUXDO_CLIENT_ID: "${LINUXDO_CLIENT_ID}"
      LINUXDO_CLIENT_SECRET: "${LINUXDO_CLIENT_SECRET}"
      LINUXDO_REDIRECT_URI: "${LINUXDO_REDIRECT_URI}"
    # 生产环境端口配置 - 不直接暴露到公网
    ports: []
    expose:
      - "5555"
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 前端服务 - 生产环境配置
  frontend:
    # 生产环境建议使用预构建的镜像
    # image: your-registry/email-server-frontend:latest
    build:
      args:
        # 生产环境API地址 - 请修改为您的实际域名和端口
        VUE_APP_API_BASE_URL: "${VUE_APP_API_BASE_URL:-http://yourdomain.com:5555/api/v1}"
    # 生产环境端口配置 - 直接暴露前端端口
    ports:
      - "80:80"   # HTTP端口
      - "443:80"  # 如果需要HTTPS，可以在前端配置SSL
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# 生产环境网络配置
networks:
  email_server_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 生产环境数据卷
volumes:
  backend_data:
    driver: local
  nginx_logs:
    driver: local
